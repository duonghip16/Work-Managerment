// Email service for sending verification and password reset emails
export interface EmailOptions {
  to: string
  subject: string
  html: string
}

export const sendEmail = async (options: EmailOptions): Promise<boolean> => {
  // In production, integrate with services like SendGrid, AWS SES, or Nodemailer
  // For now, we'll simulate email sending
  console.log('üìß Email sent:', {
    to: options.to,
    subject: options.subject,
    preview: options.html.substring(0, 100) + '...'
  })
  
  // Simulate async operation
  await new Promise(resolve => setTimeout(resolve, 1000))
  return true
}

export const generateVerificationEmailHTML = (verificationLink: string, userName: string) => {
  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>X√°c th·ª±c email - TaskFlow</title>
    </head>
    <body style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
      <div style="background: #f8f9fa; padding: 30px; border-radius: 10px;">
        <h1 style="color: #333; text-align: center;">TaskFlow</h1>
        <h2 style="color: #555;">X√°c th·ª±c ƒë·ªãa ch·ªâ email c·ªßa b·∫°n</h2>
        
        <p>Xin ch√†o ${userName},</p>
        
        <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒëƒÉng k√Ω TaskFlow! ƒê·ªÉ ho√†n t·∫•t qu√° tr√¨nh ƒëƒÉng k√Ω, vui l√≤ng x√°c th·ª±c ƒë·ªãa ch·ªâ email c·ªßa b·∫°n b·∫±ng c√°ch nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi:</p>
        
        <div style="text-align: center; margin: 30px 0;">
          <a href="${verificationLink}" 
             style="background: #007bff; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; display: inline-block;">
            X√°c th·ª±c Email
          </a>
        </div>
        
        <p>Ho·∫∑c copy v√† paste link sau v√†o tr√¨nh duy·ªát:</p>
        <p style="word-break: break-all; color: #007bff;">${verificationLink}</p>
        
        <p>Link n√†y s·∫Ω h·∫øt h·∫°n sau 24 gi·ªù.</p>
        
        <hr style="margin: 30px 0; border: none; border-top: 1px solid #ddd;">
        <p style="color: #666; font-size: 12px;">
          N·∫øu b·∫°n kh√¥ng ƒëƒÉng k√Ω t√†i kho·∫£n TaskFlow, vui l√≤ng b·ªè qua email n√†y.
        </p>
      </div>
    </body>
    </html>
  `
}

export const generatePasswordResetEmailHTML = (resetLink: string, userName: string) => {
  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <title>ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u - TaskFlow</title>
    </head>
    <body style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px;">
      <div style="background: #f8f9fa; padding: 30px; border-radius: 10px;">
        <h1 style="color: #333; text-align: center;">TaskFlow</h1>
        <h2 style="color: #555;">ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u</h2>
        
        <p>Xin ch√†o ${userName},</p>
        
        <p>Ch√∫ng t√¥i nh·∫≠n ƒë∆∞·ª£c y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u cho t√†i kho·∫£n TaskFlow c·ªßa b·∫°n. Nh·∫•p v√†o n√∫t b√™n d∆∞·ªõi ƒë·ªÉ t·∫°o m·∫≠t kh·∫©u m·ªõi:</p>
        
        <div style="text-align: center; margin: 30px 0;">
          <a href="${resetLink}" 
             style="background: #dc3545; color: white; padding: 12px 30px; text-decoration: none; border-radius: 5px; display: inline-block;">
            ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u
          </a>
        </div>
        
        <p>Ho·∫∑c copy v√† paste link sau v√†o tr√¨nh duy·ªát:</p>
        <p style="word-break: break-all; color: #dc3545;">${resetLink}</p>
        
        <p>Link n√†y s·∫Ω h·∫øt h·∫°n sau 1 gi·ªù.</p>
        
        <hr style="margin: 30px 0; border: none; border-top: 1px solid #ddd;">
        <p style="color: #666; font-size: 12px;">
          N·∫øu b·∫°n kh√¥ng y√™u c·∫ßu ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u, vui l√≤ng b·ªè qua email n√†y.
        </p>
      </div>
    </body>
    </html>
  `
}